-
    type: content
    mode: create
    content_type: [content type identifier]
    main_location: x # The location (node) id of the parent node
    priority: 0 # Set the priority of the main location
    other_locations: [x, y, z] # Optional, node ids of other parent location
    remote_id: custom_remote_id # Optional, will set an object remote id as the remote ID and a location remote ID with a _location suffix
    lang: xxx-YY # Optional, will fallback to default language if not provided (--default-language option or 'eng-GB' by default)
    attributes:
        - attribute1: value1
        - attribute2: value2
        - attribute3: |
                      value can be
                      on multiple lines
                      and new lines are preserved on parsing
        - attribute4: >
                      value on multiple
                      lines, but new line is not preserved on parsing
        # ezimage/ezbinaryfile file attribute example
        - attribute5:
            path: '/path/to/image' # Relative path from MigrationsVersions/images/ or MigrationsVersions/files/
            alt_text: xyz #optional, only used for images
        # ezxmltext, using references
        - attribute6:
            content: '<section><paragraph><embed view="embed" size="medium" object_id="[reference:example_reference]" /></paragraph></section>'
        # Adding values to an ezauthor field
        - attribute7:
              - 
                name: Test Author 
                email: test@example.com 
              -
                name: Another Author 
                email: another@example.com
        # Adding values to an ezobjectrelation field
        - attribute8: x # object id or string: reference:xxx
        # Adding values to an ezobjectrelationlist field
        - ezobjectrelationlist: [ x, reference:xxx ] # array of object ids or reference strings
    # The list in references tells the manager to store specific values for later use
    # by other steps in the current migration.
    references: #Optional
        -
            identifier: referenceId # A string used to identify the reference
            attribute: attributeId # An attribute to get the value of for the reference (supports: object_id and location_id)

-
    type: content
    mode: update
    object_id: x # DEPRECATED The id of the object to update.
    remote_id: xxx # DEPRECATED The 'remote_id' of the object to update. Can be used as alternative to the object_id. NB: this does *not* mean 'set the remote-id to what I want'
    match: # An alternative to object_id and remote_id specified directly. NB: only one of the 3 can be used.
           # Specify ONLY ONE of the following, to match a content or a set of contents
        - content_id: x # int|int[]
        - content_remote_id: xxx # string|string[]
        - content_id: x # int|int[]
        - content_remote_id: xxx # string|string[]
        - parent_location_id: x # int|int[]
        - parent_location_remote_id: xxx # string|string[]
        - content_type: yyy # string|string[] a content type identifier
    lang: xxx-YY # Optional, will fallback to default language if not provided (--default-language option or 'eng-GB' by default)
    attributes: # the list of attribute identifier value pairs
        - attribute1: value1
        - attribute2: value2
    # The list in references tells the manager to store specific values for later use
    # by other steps in the current migration.
    references: #Optional
        -
            identifier: referenceId # A string used to identify the reference
            attribute: attributeId # An attribute to get the value of for the reference (supports object_id and location_id)

-
    type: content
    mode: delete
    object_id: x # DEPRECATED the content/object id or a list of ids
    remote_id: x # DEPRECATED the content/object id or a list of ids. Used when object_id and match are not set
    match: # An alternative to object_id and remote_id specified directly. NB: only one of the 3 can be used.
           # Specify ONLY ONE of the following, to match a content or a set of contents
        - content_id: x # int|int[]
        - content_remote_id: xxx # string|string[]
        - content_id: x # int|int[]
        - content_remote_id: xxx # string|string[]
        - parent_location_id: x # int|int[]
        - parent_location_remote_id: xxx # string|string[]
        - content_type: yyy # string|string[] a content type identifier

# Other examples for how to identify objects to delete

-
    type: content
    mode: delete
    remote_id: x # the remote id of the object

-
    type: content
    mode: delete
    object_id: [id1, id2, id3] # Defining a sequence with []

-
    type: content
    mode: delete
    # Sequences with the standard list syntax
    object_id: - id1
               - id2
               - id3
